package tsd.jason.services;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
 * UserInfoService service = new UserInfoService();
 * UserInfoDelegate portType = service.getUserInfoPort();
 * portType.getUserInfo(...);
 * </pre>
 * 
 * </p>
 * 
 */
@WebServiceClient(name = "UserInfoService", targetNamespace = "http://Services.Jason.TSD/", wsdlLocation = "http://localhost:8080/UserMgrService/UserInfoPort?wsdl")
public class UserInfoService extends Service {

	private final static URL USERINFOSERVICE_WSDL_LOCATION;
	private final static Logger logger = Logger
			.getLogger(tsd.jason.services.UserInfoService.class.getName());

	static {
		URL url = null;
		try {
			URL baseUrl;
			baseUrl = tsd.jason.services.UserInfoService.class.getResource(".");
			url = new URL(baseUrl,
					"http://localhost:8080/UserMgrService/UserInfoPort?wsdl");
		} catch (MalformedURLException e) {
			logger.warning("Failed to create URL for the wsdl Location: 'http://localhost:8080/UserMgrService/UserInfoPort?wsdl', retrying as a local file");
			logger.warning(e.getMessage());
		}
		USERINFOSERVICE_WSDL_LOCATION = url;
	}

	public UserInfoService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public UserInfoService() {
		super(USERINFOSERVICE_WSDL_LOCATION, new QName(
				"http://Services.Jason.TSD/", "UserInfoService"));
	}

	/**
	 * 
	 * @return returns UserInfoDelegate
	 */
	@WebEndpoint(name = "UserInfoPort")
	public UserInfoDelegate getUserInfoPort() {
		return super.getPort(new QName("http://Services.Jason.TSD/",
				"UserInfoPort"), UserInfoDelegate.class);
	}
	public static void main(String[] args) {
		UserInfoService s=new UserInfoService();
		UserInfoDelegate u=s.getUserInfoPort();
		System.out.println(u.getUserInfo());
	}

}
